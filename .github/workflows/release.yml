name: Build and Package Extension

on:
  workflow_run:
    workflows: ["tag-check"]
    types:
      - completed

permissions:
  contents: write

jobs:
  build-and-package:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Verify tag is on a release branch
        shell: bash
        run: |
          TAG_COMMIT_SHA=$(git rev-parse $GITHUB_REF)
          echo "Tag commit SHA: $TAG_COMMIT_SHA"

          BRANCHES=$(git branch -r --contains $TAG_COMMIT_SHA)
          echo "Branches containing the commit of the tag:"
          echo "$BRANCHES"

          if echo "$BRANCHES" | grep -qE 'origin/release/'; then
            echo "The tag is on a release-branch."
          else
            echo "The tag is not on a release-branch. Ending workflow."
            exit 1
          fi

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Update package.json version
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          echo "Updating version to $VERSION"
          npm version --no-git-tag-version $VERSION

      - name: Install vsce
        run: npm install -g @vscode/vsce

      - name: Package Extension
        run: vsce package

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: vsce-package
          path: '*.vsix'

      - name: Publish Artifact
        run: vsce publish
        env:
          VSCE_PAT: ${{ secrets.VSCE_TOKEN }}
        
      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: vsce-package
          path: '*.vsix'

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          body: |
            Automatically generated release for version ${{ github.ref_name }}.
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./csharp-playground-${{ github.ref_name }}.vsix
          asset_name: csharp-playground-${{ github.ref_name }}.vsix
          asset_content_type: application/octet-stream